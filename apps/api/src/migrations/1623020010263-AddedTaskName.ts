import {MigrationInterface, QueryRunner} from "typeorm";

export class AddedTaskName1623020010263 implements MigrationInterface {
    name = 'AddedTaskName1623020010263'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "temporary_task" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "date_created" datetime NOT NULL, "date_completed" datetime, "proposed_time" time, "executor_user_id" integer, "assigned_user_id" integer, "frequency_id" integer, "household_id" integer, "category_id" integer, CONSTRAINT "FK_d79514b8dcb967473f114309117" FOREIGN KEY ("household_id", "category_id") REFERENCES "household_category" ("household_id", "category_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b6aa8a02ed2e029ce4f88c7e75a" FOREIGN KEY ("frequency_id") REFERENCES "frequency" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_f3172a11cafc66aa03fded6cf8c" FOREIGN KEY ("assigned_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9b2e45879240b2c619b0d2273cf" FOREIGN KEY ("executor_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_task"("id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id") SELECT "id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id" FROM "task"`);
        await queryRunner.query(`DROP TABLE "task"`);
        await queryRunner.query(`ALTER TABLE "temporary_task" RENAME TO "task"`);
        await queryRunner.query(`CREATE TABLE "temporary_task" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "date_created" datetime NOT NULL, "date_completed" datetime, "proposed_time" time, "executor_user_id" integer, "assigned_user_id" integer, "frequency_id" integer, "household_id" integer, "category_id" integer, "name" varchar(60) NOT NULL, "description" text, CONSTRAINT "FK_d79514b8dcb967473f114309117" FOREIGN KEY ("household_id", "category_id") REFERENCES "household_category" ("household_id", "category_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b6aa8a02ed2e029ce4f88c7e75a" FOREIGN KEY ("frequency_id") REFERENCES "frequency" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_f3172a11cafc66aa03fded6cf8c" FOREIGN KEY ("assigned_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9b2e45879240b2c619b0d2273cf" FOREIGN KEY ("executor_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_task"("id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id") SELECT "id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id" FROM "task"`);
        await queryRunner.query(`DROP TABLE "task"`);
        await queryRunner.query(`ALTER TABLE "temporary_task" RENAME TO "task"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "task" RENAME TO "temporary_task"`);
        await queryRunner.query(`CREATE TABLE "task" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "date_created" datetime NOT NULL, "date_completed" datetime, "proposed_time" time, "executor_user_id" integer, "assigned_user_id" integer, "frequency_id" integer, "household_id" integer, "category_id" integer, CONSTRAINT "FK_d79514b8dcb967473f114309117" FOREIGN KEY ("household_id", "category_id") REFERENCES "household_category" ("household_id", "category_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b6aa8a02ed2e029ce4f88c7e75a" FOREIGN KEY ("frequency_id") REFERENCES "frequency" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_f3172a11cafc66aa03fded6cf8c" FOREIGN KEY ("assigned_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9b2e45879240b2c619b0d2273cf" FOREIGN KEY ("executor_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "task"("id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id") SELECT "id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id" FROM "temporary_task"`);
        await queryRunner.query(`DROP TABLE "temporary_task"`);
        await queryRunner.query(`ALTER TABLE "task" RENAME TO "temporary_task"`);
        await queryRunner.query(`CREATE TABLE "task" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "date_created" datetime NOT NULL, "date_completed" datetime, "note" text, "proposed_time" time, "executor_user_id" integer, "assigned_user_id" integer, "frequency_id" integer, "household_id" integer, "category_id" integer, CONSTRAINT "FK_d79514b8dcb967473f114309117" FOREIGN KEY ("household_id", "category_id") REFERENCES "household_category" ("household_id", "category_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b6aa8a02ed2e029ce4f88c7e75a" FOREIGN KEY ("frequency_id") REFERENCES "frequency" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_f3172a11cafc66aa03fded6cf8c" FOREIGN KEY ("assigned_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9b2e45879240b2c619b0d2273cf" FOREIGN KEY ("executor_user_id") REFERENCES "household_member" ("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "task"("id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id") SELECT "id", "date_created", "date_completed", "proposed_time", "executor_user_id", "assigned_user_id", "frequency_id", "household_id", "category_id" FROM "temporary_task"`);
        await queryRunner.query(`DROP TABLE "temporary_task"`);
    }

}
